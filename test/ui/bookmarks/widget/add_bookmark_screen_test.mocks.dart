// Mocks generated by Mockito 5.4.6 from annotations
// in readeck_app/test/ui/bookmarks/widget/add_bookmark_screen_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i9;
import 'dart:ui' as _i8;

import 'package:flutter/cupertino.dart' as _i4;
import 'package:flutter/foundation.dart' as _i3;
import 'package:flutter_command/flutter_command.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i7;
import 'package:readeck_app/data/service/web_content_service.dart' as _i6;
import 'package:readeck_app/ui/bookmarks/view_models/add_bookmark_viewmodel.dart'
    as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeCommand_0<TParam, TResult> extends _i1.SmartFake
    implements _i2.Command<TParam, TResult> {
  _FakeCommand_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeValueListenable_1<T> extends _i1.SmartFake
    implements _i3.ValueListenable<T> {
  _FakeValueListenable_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWidget_2 extends _i1.SmartFake implements _i4.Widget {
  _FakeWidget_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({_i3.DiagnosticLevel? minLevel = _i3.DiagnosticLevel.info}) =>
      super.toString();
}

/// A class which mocks [AddBookmarkViewModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockAddBookmarkViewModel extends _i1.Mock
    implements _i5.AddBookmarkViewModel {
  MockAddBookmarkViewModel() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Command<_i5.CreateBookmarkParams, void> get createBookmark =>
      (super.noSuchMethod(
        Invocation.getter(#createBookmark),
        returnValue: _FakeCommand_0<_i5.CreateBookmarkParams, void>(
          this,
          Invocation.getter(#createBookmark),
        ),
      ) as _i2.Command<_i5.CreateBookmarkParams, void>);

  @override
  _i2.Command<void, List<String>> get loadLabels => (super.noSuchMethod(
        Invocation.getter(#loadLabels),
        returnValue: _FakeCommand_0<void, List<String>>(
          this,
          Invocation.getter(#loadLabels),
        ),
      ) as _i2.Command<void, List<String>>);

  @override
  _i2.Command<String, void> get autoFetchContentCommand => (super.noSuchMethod(
        Invocation.getter(#autoFetchContentCommand),
        returnValue: _FakeCommand_0<String, void>(
          this,
          Invocation.getter(#autoFetchContentCommand),
        ),
      ) as _i2.Command<String, void>);

  @override
  _i2.Command<_i6.WebContent, void> get autoGenerateTagsCommand =>
      (super.noSuchMethod(
        Invocation.getter(#autoGenerateTagsCommand),
        returnValue: _FakeCommand_0<_i6.WebContent, void>(
          this,
          Invocation.getter(#autoGenerateTagsCommand),
        ),
      ) as _i2.Command<_i6.WebContent, void>);

  @override
  String get url => (super.noSuchMethod(
        Invocation.getter(#url),
        returnValue: _i7.dummyValue<String>(
          this,
          Invocation.getter(#url),
        ),
      ) as String);

  @override
  String get title => (super.noSuchMethod(
        Invocation.getter(#title),
        returnValue: _i7.dummyValue<String>(
          this,
          Invocation.getter(#title),
        ),
      ) as String);

  @override
  List<String> get selectedLabels => (super.noSuchMethod(
        Invocation.getter(#selectedLabels),
        returnValue: <String>[],
      ) as List<String>);

  @override
  List<String> get availableLabels => (super.noSuchMethod(
        Invocation.getter(#availableLabels),
        returnValue: <String>[],
      ) as List<String>);

  @override
  List<String> get recommendedTags => (super.noSuchMethod(
        Invocation.getter(#recommendedTags),
        returnValue: <String>[],
      ) as List<String>);

  @override
  bool get isContentFetched => (super.noSuchMethod(
        Invocation.getter(#isContentFetched),
        returnValue: false,
      ) as bool);

  @override
  bool get isTagsGenerated => (super.noSuchMethod(
        Invocation.getter(#isTagsGenerated),
        returnValue: false,
      ) as bool);

  @override
  bool get hasAiModelConfigured => (super.noSuchMethod(
        Invocation.getter(#hasAiModelConfigured),
        returnValue: false,
      ) as bool);

  @override
  bool get shouldShowRecommendations => (super.noSuchMethod(
        Invocation.getter(#shouldShowRecommendations),
        returnValue: false,
      ) as bool);

  @override
  bool get isValidUrl => (super.noSuchMethod(
        Invocation.getter(#isValidUrl),
        returnValue: false,
      ) as bool);

  @override
  bool get canSubmit => (super.noSuchMethod(
        Invocation.getter(#canSubmit),
        returnValue: false,
      ) as bool);

  @override
  set createBookmark(
          _i2.Command<_i5.CreateBookmarkParams, void>? _createBookmark) =>
      super.noSuchMethod(
        Invocation.setter(
          #createBookmark,
          _createBookmark,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set loadLabels(_i2.Command<void, List<String>>? _loadLabels) =>
      super.noSuchMethod(
        Invocation.setter(
          #loadLabels,
          _loadLabels,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set autoFetchContentCommand(
          _i2.Command<String, void>? _autoFetchContentCommand) =>
      super.noSuchMethod(
        Invocation.setter(
          #autoFetchContentCommand,
          _autoFetchContentCommand,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set autoGenerateTagsCommand(
          _i2.Command<_i6.WebContent, void>? _autoGenerateTagsCommand) =>
      super.noSuchMethod(
        Invocation.setter(
          #autoGenerateTagsCommand,
          _autoGenerateTagsCommand,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  void updateUrl(String? url) => super.noSuchMethod(
        Invocation.method(
          #updateUrl,
          [url],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updateTitle(String? title) => super.noSuchMethod(
        Invocation.method(
          #updateTitle,
          [title],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updateSelectedLabels(List<String>? labels) => super.noSuchMethod(
        Invocation.method(
          #updateSelectedLabels,
          [labels],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addLabel(String? label) => super.noSuchMethod(
        Invocation.method(
          #addLabel,
          [label],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeLabel(String? label) => super.noSuchMethod(
        Invocation.method(
          #removeLabel,
          [label],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void clearForm() => super.noSuchMethod(
        Invocation.method(
          #clearForm,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void processSharedText(String? sharedText) => super.noSuchMethod(
        Invocation.method(
          #processSharedText,
          [sharedText],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addRecommendedTag(String? tag) => super.noSuchMethod(
        Invocation.method(
          #addRecommendedTag,
          [tag],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addAllRecommendedTags() => super.noSuchMethod(
        Invocation.method(
          #addAllRecommendedTags,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void retryContentFetch() => super.noSuchMethod(
        Invocation.method(
          #retryContentFetch,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i8.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i8.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [Command].
///
/// See the documentation for Mockito's code generation for more information.
class MockStringCommand extends _i1.Mock implements _i2.Command<String, void> {
  MockStringCommand() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.ValueListenable<_i2.CommandResult<String?, void>> get results =>
      (super.noSuchMethod(
        Invocation.getter(#results),
        returnValue: _FakeValueListenable_1<_i2.CommandResult<String?, void>>(
          this,
          Invocation.getter(#results),
        ),
      ) as _i3.ValueListenable<_i2.CommandResult<String?, void>>);

  @override
  _i3.ValueListenable<bool> get isExecuting => (super.noSuchMethod(
        Invocation.getter(#isExecuting),
        returnValue: _FakeValueListenable_1<bool>(
          this,
          Invocation.getter(#isExecuting),
        ),
      ) as _i3.ValueListenable<bool>);

  @override
  _i3.ValueListenable<bool> get isExecutingSync => (super.noSuchMethod(
        Invocation.getter(#isExecutingSync),
        returnValue: _FakeValueListenable_1<bool>(
          this,
          Invocation.getter(#isExecutingSync),
        ),
      ) as _i3.ValueListenable<bool>);

  @override
  _i3.ValueListenable<bool> get canExecute => (super.noSuchMethod(
        Invocation.getter(#canExecute),
        returnValue: _FakeValueListenable_1<bool>(
          this,
          Invocation.getter(#canExecute),
        ),
      ) as _i3.ValueListenable<bool>);

  @override
  _i3.ValueListenable<_i2.CommandError<String>?> get thrownExceptions =>
      (super.noSuchMethod(
        Invocation.getter(#thrownExceptions),
        returnValue: _FakeValueListenable_1<_i2.CommandError<String>?>(
          this,
          Invocation.getter(#thrownExceptions),
        ),
      ) as _i3.ValueListenable<_i2.CommandError<String>?>);

  @override
  _i3.ValueListenable<_i2.CommandError<String>?> get errors =>
      (super.noSuchMethod(
        Invocation.getter(#errors),
        returnValue: _FakeValueListenable_1<_i2.CommandError<String>?>(
          this,
          Invocation.getter(#errors),
        ),
      ) as _i3.ValueListenable<_i2.CommandError<String>?>);

  @override
  _i3.ValueListenable<_i2.CommandError<dynamic>?> get errorsDynamic =>
      (super.noSuchMethod(
        Invocation.getter(#errorsDynamic),
        returnValue: _FakeValueListenable_1<_i2.CommandError<dynamic>?>(
          this,
          Invocation.getter(#errorsDynamic),
        ),
      ) as _i3.ValueListenable<_i2.CommandError<dynamic>?>);

  @override
  _i2.CustomNotifierMode get mode => (super.noSuchMethod(
        Invocation.getter(#mode),
        returnValue: _i2.CustomNotifierMode.normal,
      ) as _i2.CustomNotifierMode);

  @override
  int get listenerCount => (super.noSuchMethod(
        Invocation.getter(#listenerCount),
        returnValue: 0,
      ) as int);

  @override
  bool get asyncNotification => (super.noSuchMethod(
        Invocation.getter(#asyncNotification),
        returnValue: false,
      ) as bool);

  @override
  set listenerCount(int? _listenerCount) => super.noSuchMethod(
        Invocation.setter(
          #listenerCount,
          _listenerCount,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set value(dynamic val) => super.noSuchMethod(
        Invocation.setter(
          #value,
          val,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  void execute([String? param]) => super.noSuchMethod(
        Invocation.method(
          #execute,
          [param],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void call([String? param]) => super.noSuchMethod(
        Invocation.method(
          #call,
          [param],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void clearErrors() => super.noSuchMethod(
        Invocation.method(
          #clearErrors,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i9.Future<void> executeWithFuture([String? param]) => (super.noSuchMethod(
        Invocation.method(
          #executeWithFuture,
          [param],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i4.Widget toWidget({
    required _i4.Widget Function(
      void,
      String?,
    )? onResult,
    _i4.Widget Function(
      void,
      String?,
    )? whileExecuting,
    _i4.Widget Function(
      Object?,
      String?,
    )? onError,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #toWidget,
          [],
          {
            #onResult: onResult,
            #whileExecuting: whileExecuting,
            #onError: onError,
          },
        ),
        returnValue: _FakeWidget_2(
          this,
          Invocation.method(
            #toWidget,
            [],
            {
              #onResult: onResult,
              #whileExecuting: whileExecuting,
              #onError: onError,
            },
          ),
        ),
      ) as _i4.Widget);

  @override
  void notifyListeners(
          [void Function(
            Object,
            StackTrace,
          )? onError]) =>
      super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [onError],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(void Function()? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(void Function()? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [Command].
///
/// See the documentation for Mockito's code generation for more information.
class MockCreateCommand extends _i1.Mock
    implements _i2.Command<_i5.CreateBookmarkParams, void> {
  MockCreateCommand() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.ValueListenable<_i2.CommandResult<_i5.CreateBookmarkParams?, void>>
      get results => (super.noSuchMethod(
            Invocation.getter(#results),
            returnValue: _FakeValueListenable_1<
                _i2.CommandResult<_i5.CreateBookmarkParams?, void>>(
              this,
              Invocation.getter(#results),
            ),
          ) as _i3.ValueListenable<
              _i2.CommandResult<_i5.CreateBookmarkParams?, void>>);

  @override
  _i3.ValueListenable<bool> get isExecuting => (super.noSuchMethod(
        Invocation.getter(#isExecuting),
        returnValue: _FakeValueListenable_1<bool>(
          this,
          Invocation.getter(#isExecuting),
        ),
      ) as _i3.ValueListenable<bool>);

  @override
  _i3.ValueListenable<bool> get isExecutingSync => (super.noSuchMethod(
        Invocation.getter(#isExecutingSync),
        returnValue: _FakeValueListenable_1<bool>(
          this,
          Invocation.getter(#isExecutingSync),
        ),
      ) as _i3.ValueListenable<bool>);

  @override
  _i3.ValueListenable<bool> get canExecute => (super.noSuchMethod(
        Invocation.getter(#canExecute),
        returnValue: _FakeValueListenable_1<bool>(
          this,
          Invocation.getter(#canExecute),
        ),
      ) as _i3.ValueListenable<bool>);

  @override
  _i3.ValueListenable<_i2.CommandError<_i5.CreateBookmarkParams>?>
      get thrownExceptions => (super.noSuchMethod(
            Invocation.getter(#thrownExceptions),
            returnValue: _FakeValueListenable_1<
                _i2.CommandError<_i5.CreateBookmarkParams>?>(
              this,
              Invocation.getter(#thrownExceptions),
            ),
          ) as _i3
              .ValueListenable<_i2.CommandError<_i5.CreateBookmarkParams>?>);

  @override
  _i3.ValueListenable<_i2.CommandError<_i5.CreateBookmarkParams>?> get errors =>
      (super.noSuchMethod(
        Invocation.getter(#errors),
        returnValue:
            _FakeValueListenable_1<_i2.CommandError<_i5.CreateBookmarkParams>?>(
          this,
          Invocation.getter(#errors),
        ),
      ) as _i3.ValueListenable<_i2.CommandError<_i5.CreateBookmarkParams>?>);

  @override
  _i3.ValueListenable<_i2.CommandError<dynamic>?> get errorsDynamic =>
      (super.noSuchMethod(
        Invocation.getter(#errorsDynamic),
        returnValue: _FakeValueListenable_1<_i2.CommandError<dynamic>?>(
          this,
          Invocation.getter(#errorsDynamic),
        ),
      ) as _i3.ValueListenable<_i2.CommandError<dynamic>?>);

  @override
  _i2.CustomNotifierMode get mode => (super.noSuchMethod(
        Invocation.getter(#mode),
        returnValue: _i2.CustomNotifierMode.normal,
      ) as _i2.CustomNotifierMode);

  @override
  int get listenerCount => (super.noSuchMethod(
        Invocation.getter(#listenerCount),
        returnValue: 0,
      ) as int);

  @override
  bool get asyncNotification => (super.noSuchMethod(
        Invocation.getter(#asyncNotification),
        returnValue: false,
      ) as bool);

  @override
  set listenerCount(int? _listenerCount) => super.noSuchMethod(
        Invocation.setter(
          #listenerCount,
          _listenerCount,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set value(dynamic val) => super.noSuchMethod(
        Invocation.setter(
          #value,
          val,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  void execute([_i5.CreateBookmarkParams? param]) => super.noSuchMethod(
        Invocation.method(
          #execute,
          [param],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void call([_i5.CreateBookmarkParams? param]) => super.noSuchMethod(
        Invocation.method(
          #call,
          [param],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void clearErrors() => super.noSuchMethod(
        Invocation.method(
          #clearErrors,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i9.Future<void> executeWithFuture([_i5.CreateBookmarkParams? param]) =>
      (super.noSuchMethod(
        Invocation.method(
          #executeWithFuture,
          [param],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i4.Widget toWidget({
    required _i4.Widget Function(
      void,
      _i5.CreateBookmarkParams?,
    )? onResult,
    _i4.Widget Function(
      void,
      _i5.CreateBookmarkParams?,
    )? whileExecuting,
    _i4.Widget Function(
      Object?,
      _i5.CreateBookmarkParams?,
    )? onError,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #toWidget,
          [],
          {
            #onResult: onResult,
            #whileExecuting: whileExecuting,
            #onError: onError,
          },
        ),
        returnValue: _FakeWidget_2(
          this,
          Invocation.method(
            #toWidget,
            [],
            {
              #onResult: onResult,
              #whileExecuting: whileExecuting,
              #onError: onError,
            },
          ),
        ),
      ) as _i4.Widget);

  @override
  void notifyListeners(
          [void Function(
            Object,
            StackTrace,
          )? onError]) =>
      super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [onError],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(void Function()? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(void Function()? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [Command].
///
/// See the documentation for Mockito's code generation for more information.
class MockWebContentCommand extends _i1.Mock
    implements _i2.Command<_i6.WebContent, void> {
  MockWebContentCommand() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.ValueListenable<_i2.CommandResult<_i6.WebContent?, void>> get results =>
      (super.noSuchMethod(
        Invocation.getter(#results),
        returnValue:
            _FakeValueListenable_1<_i2.CommandResult<_i6.WebContent?, void>>(
          this,
          Invocation.getter(#results),
        ),
      ) as _i3.ValueListenable<_i2.CommandResult<_i6.WebContent?, void>>);

  @override
  _i3.ValueListenable<bool> get isExecuting => (super.noSuchMethod(
        Invocation.getter(#isExecuting),
        returnValue: _FakeValueListenable_1<bool>(
          this,
          Invocation.getter(#isExecuting),
        ),
      ) as _i3.ValueListenable<bool>);

  @override
  _i3.ValueListenable<bool> get isExecutingSync => (super.noSuchMethod(
        Invocation.getter(#isExecutingSync),
        returnValue: _FakeValueListenable_1<bool>(
          this,
          Invocation.getter(#isExecutingSync),
        ),
      ) as _i3.ValueListenable<bool>);

  @override
  _i3.ValueListenable<bool> get canExecute => (super.noSuchMethod(
        Invocation.getter(#canExecute),
        returnValue: _FakeValueListenable_1<bool>(
          this,
          Invocation.getter(#canExecute),
        ),
      ) as _i3.ValueListenable<bool>);

  @override
  _i3.ValueListenable<_i2.CommandError<_i6.WebContent>?> get thrownExceptions =>
      (super.noSuchMethod(
        Invocation.getter(#thrownExceptions),
        returnValue: _FakeValueListenable_1<_i2.CommandError<_i6.WebContent>?>(
          this,
          Invocation.getter(#thrownExceptions),
        ),
      ) as _i3.ValueListenable<_i2.CommandError<_i6.WebContent>?>);

  @override
  _i3.ValueListenable<_i2.CommandError<_i6.WebContent>?> get errors =>
      (super.noSuchMethod(
        Invocation.getter(#errors),
        returnValue: _FakeValueListenable_1<_i2.CommandError<_i6.WebContent>?>(
          this,
          Invocation.getter(#errors),
        ),
      ) as _i3.ValueListenable<_i2.CommandError<_i6.WebContent>?>);

  @override
  _i3.ValueListenable<_i2.CommandError<dynamic>?> get errorsDynamic =>
      (super.noSuchMethod(
        Invocation.getter(#errorsDynamic),
        returnValue: _FakeValueListenable_1<_i2.CommandError<dynamic>?>(
          this,
          Invocation.getter(#errorsDynamic),
        ),
      ) as _i3.ValueListenable<_i2.CommandError<dynamic>?>);

  @override
  _i2.CustomNotifierMode get mode => (super.noSuchMethod(
        Invocation.getter(#mode),
        returnValue: _i2.CustomNotifierMode.normal,
      ) as _i2.CustomNotifierMode);

  @override
  int get listenerCount => (super.noSuchMethod(
        Invocation.getter(#listenerCount),
        returnValue: 0,
      ) as int);

  @override
  bool get asyncNotification => (super.noSuchMethod(
        Invocation.getter(#asyncNotification),
        returnValue: false,
      ) as bool);

  @override
  set listenerCount(int? _listenerCount) => super.noSuchMethod(
        Invocation.setter(
          #listenerCount,
          _listenerCount,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set value(dynamic val) => super.noSuchMethod(
        Invocation.setter(
          #value,
          val,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  void execute([_i6.WebContent? param]) => super.noSuchMethod(
        Invocation.method(
          #execute,
          [param],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void call([_i6.WebContent? param]) => super.noSuchMethod(
        Invocation.method(
          #call,
          [param],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void clearErrors() => super.noSuchMethod(
        Invocation.method(
          #clearErrors,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i9.Future<void> executeWithFuture([_i6.WebContent? param]) =>
      (super.noSuchMethod(
        Invocation.method(
          #executeWithFuture,
          [param],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i4.Widget toWidget({
    required _i4.Widget Function(
      void,
      _i6.WebContent?,
    )? onResult,
    _i4.Widget Function(
      void,
      _i6.WebContent?,
    )? whileExecuting,
    _i4.Widget Function(
      Object?,
      _i6.WebContent?,
    )? onError,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #toWidget,
          [],
          {
            #onResult: onResult,
            #whileExecuting: whileExecuting,
            #onError: onError,
          },
        ),
        returnValue: _FakeWidget_2(
          this,
          Invocation.method(
            #toWidget,
            [],
            {
              #onResult: onResult,
              #whileExecuting: whileExecuting,
              #onError: onError,
            },
          ),
        ),
      ) as _i4.Widget);

  @override
  void notifyListeners(
          [void Function(
            Object,
            StackTrace,
          )? onError]) =>
      super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [onError],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(void Function()? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(void Function()? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
}
