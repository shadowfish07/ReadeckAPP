// Mocks generated by Mockito 5.4.6 from annotations
// in readeck_app/test/unit/data/service/openrouter_api_client_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;
import 'dart:convert' as _i4;
import 'dart:typed_data' as _i6;

import 'package:http/http.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i5;
import 'package:readeck_app/data/service/shared_preference_service.dart' as _i7;
import 'package:readeck_app/utils/reading_stats_calculator.dart' as _i9;
import 'package:result_dart/result_dart.dart' as _i8;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeResponse_0 extends _i1.SmartFake implements _i2.Response {
  _FakeResponse_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStreamedResponse_1 extends _i1.SmartFake
    implements _i2.StreamedResponse {
  _FakeStreamedResponse_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [Client].
///
/// See the documentation for Mockito's code generation for more information.
class MockClient extends _i1.Mock implements _i2.Client {
  MockClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i2.Response> head(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #head,
          [url],
          {#headers: headers},
        ),
        returnValue: _i3.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #head,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i3.Future<_i2.Response>);

  @override
  _i3.Future<_i2.Response> get(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [url],
          {#headers: headers},
        ),
        returnValue: _i3.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #get,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i3.Future<_i2.Response>);

  @override
  _i3.Future<_i2.Response> post(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i4.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i3.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #post,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i3.Future<_i2.Response>);

  @override
  _i3.Future<_i2.Response> put(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i4.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i3.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #put,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i3.Future<_i2.Response>);

  @override
  _i3.Future<_i2.Response> patch(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i4.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patch,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i3.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #patch,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i3.Future<_i2.Response>);

  @override
  _i3.Future<_i2.Response> delete(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i4.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i3.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #delete,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i3.Future<_i2.Response>);

  @override
  _i3.Future<String> read(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #read,
          [url],
          {#headers: headers},
        ),
        returnValue: _i3.Future<String>.value(_i5.dummyValue<String>(
          this,
          Invocation.method(
            #read,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i3.Future<String>);

  @override
  _i3.Future<_i6.Uint8List> readBytes(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #readBytes,
          [url],
          {#headers: headers},
        ),
        returnValue: _i3.Future<_i6.Uint8List>.value(_i6.Uint8List(0)),
      ) as _i3.Future<_i6.Uint8List>);

  @override
  _i3.Future<_i2.StreamedResponse> send(_i2.BaseRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #send,
          [request],
        ),
        returnValue:
            _i3.Future<_i2.StreamedResponse>.value(_FakeStreamedResponse_1(
          this,
          Invocation.method(
            #send,
            [request],
          ),
        )),
      ) as _i3.Future<_i2.StreamedResponse>);

  @override
  void close() => super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [SharedPreferencesService].
///
/// See the documentation for Mockito's code generation for more information.
class MockSharedPreferencesService extends _i1.Mock
    implements _i7.SharedPreferencesService {
  MockSharedPreferencesService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i8.ResultDart<void, Exception>> setThemeMode(int? value) =>
      (super.noSuchMethod(
        Invocation.method(
          #setThemeMode,
          [value],
        ),
        returnValue: _i3.Future<_i8.ResultDart<void, Exception>>.value(
            _i5.dummyValue<_i8.ResultDart<void, Exception>>(
          this,
          Invocation.method(
            #setThemeMode,
            [value],
          ),
        )),
      ) as _i3.Future<_i8.ResultDart<void, Exception>>);

  @override
  _i3.Future<_i8.ResultDart<int, Exception>> getThemeMode() =>
      (super.noSuchMethod(
        Invocation.method(
          #getThemeMode,
          [],
        ),
        returnValue: _i3.Future<_i8.ResultDart<int, Exception>>.value(
            _i5.dummyValue<_i8.ResultDart<int, Exception>>(
          this,
          Invocation.method(
            #getThemeMode,
            [],
          ),
        )),
      ) as _i3.Future<_i8.ResultDart<int, Exception>>);

  @override
  _i3.Future<_i8.ResultDart<void, Exception>> setReadeckApiHost(
          String? value) =>
      (super.noSuchMethod(
        Invocation.method(
          #setReadeckApiHost,
          [value],
        ),
        returnValue: _i3.Future<_i8.ResultDart<void, Exception>>.value(
            _i5.dummyValue<_i8.ResultDart<void, Exception>>(
          this,
          Invocation.method(
            #setReadeckApiHost,
            [value],
          ),
        )),
      ) as _i3.Future<_i8.ResultDart<void, Exception>>);

  @override
  _i3.Future<_i8.ResultDart<String, Exception>> getReadeckApiHost() =>
      (super.noSuchMethod(
        Invocation.method(
          #getReadeckApiHost,
          [],
        ),
        returnValue: _i3.Future<_i8.ResultDart<String, Exception>>.value(
            _i5.dummyValue<_i8.ResultDart<String, Exception>>(
          this,
          Invocation.method(
            #getReadeckApiHost,
            [],
          ),
        )),
      ) as _i3.Future<_i8.ResultDart<String, Exception>>);

  @override
  _i3.Future<_i8.ResultDart<void, Exception>> setReadeckApiToken(
          String? value) =>
      (super.noSuchMethod(
        Invocation.method(
          #setReadeckApiToken,
          [value],
        ),
        returnValue: _i3.Future<_i8.ResultDart<void, Exception>>.value(
            _i5.dummyValue<_i8.ResultDart<void, Exception>>(
          this,
          Invocation.method(
            #setReadeckApiToken,
            [value],
          ),
        )),
      ) as _i3.Future<_i8.ResultDart<void, Exception>>);

  @override
  _i3.Future<_i8.ResultDart<String, Exception>> getReadeckApiToken() =>
      (super.noSuchMethod(
        Invocation.method(
          #getReadeckApiToken,
          [],
        ),
        returnValue: _i3.Future<_i8.ResultDart<String, Exception>>.value(
            _i5.dummyValue<_i8.ResultDart<String, Exception>>(
          this,
          Invocation.method(
            #getReadeckApiToken,
            [],
          ),
        )),
      ) as _i3.Future<_i8.ResultDart<String, Exception>>);

  @override
  _i3.Future<_i8.ResultDart<void, Exception>> setOpenRouterApiKey(
          String? value) =>
      (super.noSuchMethod(
        Invocation.method(
          #setOpenRouterApiKey,
          [value],
        ),
        returnValue: _i3.Future<_i8.ResultDart<void, Exception>>.value(
            _i5.dummyValue<_i8.ResultDart<void, Exception>>(
          this,
          Invocation.method(
            #setOpenRouterApiKey,
            [value],
          ),
        )),
      ) as _i3.Future<_i8.ResultDart<void, Exception>>);

  @override
  _i3.Future<_i8.ResultDart<String, Exception>> getOpenRouterApiKey() =>
      (super.noSuchMethod(
        Invocation.method(
          #getOpenRouterApiKey,
          [],
        ),
        returnValue: _i3.Future<_i8.ResultDart<String, Exception>>.value(
            _i5.dummyValue<_i8.ResultDart<String, Exception>>(
          this,
          Invocation.method(
            #getOpenRouterApiKey,
            [],
          ),
        )),
      ) as _i3.Future<_i8.ResultDart<String, Exception>>);

  @override
  _i3.Future<_i8.ResultDart<void, Exception>> setSelectedOpenRouterModel(
          String? value) =>
      (super.noSuchMethod(
        Invocation.method(
          #setSelectedOpenRouterModel,
          [value],
        ),
        returnValue: _i3.Future<_i8.ResultDart<void, Exception>>.value(
            _i5.dummyValue<_i8.ResultDart<void, Exception>>(
          this,
          Invocation.method(
            #setSelectedOpenRouterModel,
            [value],
          ),
        )),
      ) as _i3.Future<_i8.ResultDart<void, Exception>>);

  @override
  _i3.Future<_i8.ResultDart<String, Exception>> getSelectedOpenRouterModel() =>
      (super.noSuchMethod(
        Invocation.method(
          #getSelectedOpenRouterModel,
          [],
        ),
        returnValue: _i3.Future<_i8.ResultDart<String, Exception>>.value(
            _i5.dummyValue<_i8.ResultDart<String, Exception>>(
          this,
          Invocation.method(
            #getSelectedOpenRouterModel,
            [],
          ),
        )),
      ) as _i3.Future<_i8.ResultDart<String, Exception>>);

  @override
  _i3.Future<_i8.ResultDart<void, Exception>> setReadingStats(
    String? bookmarkId,
    _i9.ReadingStats? stats,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setReadingStats,
          [
            bookmarkId,
            stats,
          ],
        ),
        returnValue: _i3.Future<_i8.ResultDart<void, Exception>>.value(
            _i5.dummyValue<_i8.ResultDart<void, Exception>>(
          this,
          Invocation.method(
            #setReadingStats,
            [
              bookmarkId,
              stats,
            ],
          ),
        )),
      ) as _i3.Future<_i8.ResultDart<void, Exception>>);

  @override
  _i3.Future<_i8.ResultDart<_i9.ReadingStats, Exception>> getReadingStats(
          String? bookmarkId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getReadingStats,
          [bookmarkId],
        ),
        returnValue:
            _i3.Future<_i8.ResultDart<_i9.ReadingStats, Exception>>.value(
                _i5.dummyValue<_i8.ResultDart<_i9.ReadingStats, Exception>>(
          this,
          Invocation.method(
            #getReadingStats,
            [bookmarkId],
          ),
        )),
      ) as _i3.Future<_i8.ResultDart<_i9.ReadingStats, Exception>>);

  @override
  _i3.Future<_i8.ResultDart<void, Exception>> setTranslationProvider(
          String? value) =>
      (super.noSuchMethod(
        Invocation.method(
          #setTranslationProvider,
          [value],
        ),
        returnValue: _i3.Future<_i8.ResultDart<void, Exception>>.value(
            _i5.dummyValue<_i8.ResultDart<void, Exception>>(
          this,
          Invocation.method(
            #setTranslationProvider,
            [value],
          ),
        )),
      ) as _i3.Future<_i8.ResultDart<void, Exception>>);

  @override
  _i3.Future<_i8.ResultDart<String, Exception>> getTranslationProvider() =>
      (super.noSuchMethod(
        Invocation.method(
          #getTranslationProvider,
          [],
        ),
        returnValue: _i3.Future<_i8.ResultDart<String, Exception>>.value(
            _i5.dummyValue<_i8.ResultDart<String, Exception>>(
          this,
          Invocation.method(
            #getTranslationProvider,
            [],
          ),
        )),
      ) as _i3.Future<_i8.ResultDart<String, Exception>>);

  @override
  _i3.Future<_i8.ResultDart<void, Exception>> setTranslationTargetLanguage(
          String? value) =>
      (super.noSuchMethod(
        Invocation.method(
          #setTranslationTargetLanguage,
          [value],
        ),
        returnValue: _i3.Future<_i8.ResultDart<void, Exception>>.value(
            _i5.dummyValue<_i8.ResultDart<void, Exception>>(
          this,
          Invocation.method(
            #setTranslationTargetLanguage,
            [value],
          ),
        )),
      ) as _i3.Future<_i8.ResultDart<void, Exception>>);

  @override
  _i3.Future<_i8.ResultDart<String, Exception>>
      getTranslationTargetLanguage() => (super.noSuchMethod(
            Invocation.method(
              #getTranslationTargetLanguage,
              [],
            ),
            returnValue: _i3.Future<_i8.ResultDart<String, Exception>>.value(
                _i5.dummyValue<_i8.ResultDart<String, Exception>>(
              this,
              Invocation.method(
                #getTranslationTargetLanguage,
                [],
              ),
            )),
          ) as _i3.Future<_i8.ResultDart<String, Exception>>);

  @override
  _i3.Future<_i8.ResultDart<void, Exception>> setTranslationCacheEnabled(
          bool? value) =>
      (super.noSuchMethod(
        Invocation.method(
          #setTranslationCacheEnabled,
          [value],
        ),
        returnValue: _i3.Future<_i8.ResultDart<void, Exception>>.value(
            _i5.dummyValue<_i8.ResultDart<void, Exception>>(
          this,
          Invocation.method(
            #setTranslationCacheEnabled,
            [value],
          ),
        )),
      ) as _i3.Future<_i8.ResultDart<void, Exception>>);

  @override
  _i3.Future<_i8.ResultDart<bool, Exception>> getTranslationCacheEnabled() =>
      (super.noSuchMethod(
        Invocation.method(
          #getTranslationCacheEnabled,
          [],
        ),
        returnValue: _i3.Future<_i8.ResultDart<bool, Exception>>.value(
            _i5.dummyValue<_i8.ResultDart<bool, Exception>>(
          this,
          Invocation.method(
            #getTranslationCacheEnabled,
            [],
          ),
        )),
      ) as _i3.Future<_i8.ResultDart<bool, Exception>>);
}
